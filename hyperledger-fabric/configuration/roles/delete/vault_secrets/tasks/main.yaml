##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
# This role deletes the Vault configurations
##############################################################################################

# Delete the Docker credentials
- name: Delete docker creds
  k8s:
    kind: Secret
    namespace: "{{ component_name }}"
    name: "regcred"
    state: absent
    kubeconfig: "{{ kubernetes.config_file }}"
    context: "{{ kubernetes.context }}"
  ignore_errors: true

# Delete vault auth
- name: Delete vault-auth path
  shell: |
    vault kv delete sys/auth/{{ network.env.type }}{{ component_name }}-auth
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"

# # Delete vault auth
# - name: Delete vault-auth path
#   shell: |
#     vault kv delete sys/auth/{{ item.k8s.cluster_id }}{{ component_name }}-auth
#   environment:
#     VAULT_ADDR: "{{ item.vault.url }}"
#     VAULT_TOKEN: "{{ item.vault.root_token }}"
#   when: item.k8s.cluster_id is defined

# Delete crypto materials from vault
- name: Delete Crypto for orderers
  shell: |
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/ca
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/orderers/{{ orderer.name | lower }}-tls
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/orderers/{{ orderer.name | lower }}-msp
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/admin-tls
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/admin-msp
  loop: "{{ services.orderers }}"
  loop_control:
    loop_var: orderer
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: item.services.orderers is defined and item.services.orderers | length > 0

# Delete crypto materials from extternalchaincode
- name: Delete Crypto for peers
  shell: |
    {% for chaincode in chaincodes %}
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ item.name | lower }}/peerOrganizations/{{ component_name }}/peers/{{ peer.name }}.{{ component_name }}/chaincodes/{{ chaincode.name }}
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ item.name | lower }}/peerOrganizations/{{ component_name }}/chaincodes/{{ chaincode.name }}/certificate/v{{ chaincode.version }}
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ item.name | lower }}/peerOrganizations/{{ component_name }}/chaincodes/{{ chaincode.name }}/package/v{{ chaincode.version }}
    {% endfor %}
  vars:
    chaincodes: "{{ peer.chaincodes }}"
  loop: "{{ services.peers }}"
  loop_control:
    loop_var: peer
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: 
    - item.services.peers is defined and item.services.peers | length > 0
    - peer.chaincodes is defined

# Delete crypto materials from vault
- name: Delete Crypto for peers
  shell: |
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/ca
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/admin-tls
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/admin-msp
    {% for peer in peers %}
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/peers/{{peer.name}}-tls
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/peers//{{peer.name}}-msp
    {% endfor %}
  vars:
    peers: "{{ services.peers }}"
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: item.services.peers is defined and item.services.peers | length > 0

# Remove all endorsers
- name: Remove all endorsers
  args:
    executable: /bin/bash
  shell: |    
    for path in $(vault kv list {{ item.vault.secret_path | default('secretsv2') }}/{{ item.name | lower }}/peerOrganizations/{{ component_name }}/endorsers);
    do
      vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ item.name | lower }}/peerOrganizations/{{ component_name }}/endorsers/${path}/users/admin/msp;
    done
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  ignore_errors: true

# Delete crypto materials from vault
- name: Delete Crypto for users
  shell: |
    {% for user in users %}
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/{{ user.identity }}-tls
    vault kv delete {{ item.vault.secret_path | default('secretsv2') }}/{{ network.env.type }}{{ org_name }}/users/{{ user.identity }}-msp
    {% endfor %}
  vars:
    users: "{{ item.users }}"
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  when: 
    - item.services.peers is defined and item.services.peers | length > 0
    - item.users is defined

# Delete policy
- name: Delete policy
  shell: |
    vault policy delete vault-crypto-{{ component_type }}-{{ component_name }}-ro
  environment:
    VAULT_ADDR: "{{ item.vault.url }}"
    VAULT_TOKEN: "{{ item.vault.root_token }}"
  ignore_errors: true
