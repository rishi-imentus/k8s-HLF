##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

##############################################################################################
# This role creates the value file for peers of organisations and write couch db credentials
# to the vault.
##############################################################################################

# This task creates the build directory if it does not exist
- name: Create build directory if it does not exist
  file:
    path: "./build"
    state: directory

# This task reset peers pods
# Reset peers pods
- name: "Reset peers pods"
  include_role:
    name: create/refresh_certs/reset_pod
  vars:
    pod_name: "{{ peer.name | lower }}"
    name: "{{ org.name | lower }}"
    file_path: "{{ values_dir }}/{{ name }}/values-{{ peer.name }}.yaml"
    gitops_value: "{{ org.gitops }}"
    component_ns: "{{ namespace }}"
    kubernetes: "{{ org.k8s }}"
    hr_name: "{{ org.name | lower }}-{{ peer.name }}"
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: (refresh_cert is defined and refresh_cert == 'true') or peer.configpath is defined

# Set Variable first_orderer
- name: "Set Variable first_peer"
  set_fact:
    first_peer: "{{ component_services.peers | map(attribute='name') | first }}"

# Create the value file for peers of organisations 
- name: This role creates the value file for peers of organisations 
  include_tasks: nested_main.yaml
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 

# Git Push: Push the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ org.gitops }}"
    msg: "[ci skip] Pushing Peer files"

# Wait for peer pods to be in the state of running
- name: "Waiting for peer pod {{ peer.name }} in {{ org.name | lower }}-net"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ org.name | lower }}-net"
    component_name: "{{ peer.name }}"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - app = {{ component_name }}
  loop: "{{ component_services.peers }}"
  loop_control:
    loop_var: peer 
  when: peer.peerstatus is not defined or peer.peerstatus == 'new'
